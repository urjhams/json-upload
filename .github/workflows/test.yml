# This is a basic workflow to help you get started with Actions

name: Test Workflow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  bumpTag:
    name: Generate and bump tag number
    runs-on: macos-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
        
      # Fetches all tags for the repo
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        
      # Check if the app version has a git tag
      # If there is a git tag for the version set the variable 'tagged' to 0
      # if there is NOT a git tag for the version set the variable 'tagged' to 1
      - name: 'Check: package version has corrosponding git tag'
        id: tags
        shell: bash
        run: |
          git show-ref --tags --verify --quiet -- \
          "refs/tags/v${{ steps.package.outputs.version }}" && \
          echo "::set-output name=tags::0" || \
          echo "::set-output name=tags::1"
        
      - name: has tag case
        if: steps.tags.ouput.tags != 0
        run: echo "number of tags ${{ steps.tas.ouput.tags }}"
        
      - name: has no tag case
        if: steps.tags.output.tags == 0
        run: echo "there is no tags"
        
#       - name: get current tag
#         run: |
#           echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          
#       - name: call out current tag
#         run: echo "$GITHUB_REF"
      
#       - name: increase current tag
        
        
#       - name: bump new tag
        
        
        
        
        
        
        
        
#   runTestScript:
#     name: run the test script
#     runs-on: macos-latest
#     steps:
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#             python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
#             architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
            
#       - name: install dependencies
#         run: |
#           pip install firebase-admin
          
#       - run: |
#           python ./test.py
          
#       - name: aftermath
#         #if: ${{ always() }}    # this will keep run this step even the previous steps are failed
#         run: echo "after run the script, this should not be here if the previous step failed"
