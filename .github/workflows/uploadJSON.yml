name: JSON upload Firebase workflow

on:
  repository_dispatch:
    type: [upload-the-json] # only dispatches with the custom type 'upload-the-json' can trigger this action
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
jobs:
  ciTask:
    name: test CI
    runs-on: macos-latest
    steps:
      #do something
        - run: |
            echo 'do something here'
            echo "Event input: ${{ github.event.client_payload.value }}"
          
  check-json:
    name: Make a json
    runs-on: macos-latest #ubuntu-latest
    steps:
      # check out the repository
      - name: check out
        uses: actions/checkout@v2
      
      # filter to detect different in files
#       - name: filter
#         uses: dorny/paths-filter@v2
#         id: filter
#         with:
#           filters: |
#             json:
#               - 'json-upload/usb_conversion_tables.json'

# -------------------------------------------------------- upload json by python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
            python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
            architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
            
      - name: install dependencies
        run: |
          pip install firebase-admin
  
      # write the Credential json secrect key from git_secrect
      - name: get secrect key
        id: write_key_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'service_account_key.json'
          encodedString: ${{ secrets.TEST_SECRECT }}

      - name: run upload script
        if: github.event.client_payload.value == 'tester' || 'tested'
        run: python ./json-upload/uploadJsonScript.py ${{ github.event.client_payload.value }}
# -------------------------------------------------------- upload json by nodeJS
      # set the node version
#       - name: setup node js
#         if: steps.filter.outputs.json == 'true'
#         uses: actions/setup-node@v2
#         with:
#           node-version: '12'
          
      # install the node js on environment for the upload script to use
#       - name: install node js
#         if: steps.filter.outputs.json == 'true'
#         run: npm install
      
      # install firebase library
#       - name: install firebase library for node js
#         if: steps.filter.outputs.json == 'true'
#         run: npm install firebase
        #npm i @google-cloud/storage
          
      #- run: npm i express
      # install XMLHttpRequest
#       - name: install XMLHttprequest module
#         if: steps.filter.outputs.json == 'true'
#         run: npm install xmlhttprequest
      
      # run the upload script in the repository
#       - name: github script
#         if: steps.filter.outputs.json == 'true'
#         run: node ./json-upload/uploadScript.js
# -------------------------------------------------------- upload file
#       - name: Setup Python and dependencies
#         if: steps.filter.outputs.json == 'true'
#         uses: actions/setup-python@v2
#         with:
#             python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
#             architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
#       - run: |
#           pip install firebase-admin
        
#       # write the Credential json secrect key from git_secrect
#       - name: get secrect key
#         if: steps.filter.outputs.json == 'true'
#         id: write_key_file
#         uses: timheuer/base64-to-file@v1
#         with:
#           fileName: 'service_account_key.json'
#           encodedString: ${{ secrets.TEST_SECRECT }}
      
#       - name: run upload script
#         if: steps.filter.outputs.json == 'true'
#         run: python ./json-upload/uploadScript.py
